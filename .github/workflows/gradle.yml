# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - master

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make application-database.yml
        run: |
          echo "spring.datasource.url=${{ secrets.URL }}" > ./src/main/resources/application-database.yml
          echo "spring.datasource.username=${{ secrets.USERNAME }}" >> ./src/main/resources/application-database.yml
          echo "spring.datasource.password=${{ secrets.PASSWORD }}" >> ./src/main/resources/application-database.yml
          echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> ./src/main/resources/application-database.yml
          echo "spring.jpa.show-sql=true" >> ./src/main/resources/application-database.yml
          echo "spring.jpa.hibernate.ddl-auto=none" >> ./src/main/resources/application-database.yml

      - name: Make application-redis.yml
        run: |
          echo "spring.redis.host=${{ secrets.redis.host }}" > ./src/main/resources/application-redis.yml
          echo "spring.redis.port=${{ secrets.redis.port }}" >> ./src/main/resources/application-redis.yml

      - name: Build with Gradle
        run: |
          chmod +x gradlew 
          ./gradlew build

      - name: Web docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} . 
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            sudo docker rm $(sudo docker ps -a)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            cd ~
            docker-compose up -d
            sudo docker image prune -f
